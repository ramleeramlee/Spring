1. 웹 프로그램에서 클라이언트는 브라우저, 내 컴퓨터에 브라우저가 3개인데 동일한 서버로 브라우저 3개로 접속하는 경우, 서버는 클라이언트를 3개로 인식
 
2. 웹 프로그램에서 서버는 2가지
	>> 웹 서버: http요청/응답처리, 클라이언트와 http통신
	>> WAS: 서버에서 자바로 처리해야하는 부분 실행, Web Application Server

3. 클라이언트측: html(jsp) => webapp , css, js(-> jquery), img => webapp/resources

4. 서버측: java(controller, dao, service,...) => com.multi.mvc00패키지 아래

5. jquery: JS라이브러리($), ajax(페이지를 넘기지 않고, 순서와 상관없이 원할 때 아무데서나 다양한 서버로 통신 가능(비동기통신)

6. ajax: Asynchronous Javascript and XML

7. jquery에서는 ajax할 때 json많이 사용
	>> { url: "요청서버주소", data: {서버로 보낼 데이터}, 
		success: funtion()성공했을 때 처리내용 }

8. http요청(클라이언트 = 브라우저 요청)
	>> get: http의 header부분에 포함되어 주소와 함께 전달 (3가지 방법)
		1] a태그 >> <a href="one2?no=2">2번상세페이지</a> 로 표시됨 (QueryString)
		2]  form태그 >> <form action = "one2">
			         no : <input name="no" value="2"></form>
		3] >> location.href="one2?no=2"

	>> post: http의 body부분에 포함되어 전달 (1가지 방법)
		1] <form action="one2" method="post">
			no : <input name="no" value="2"></form>

9. 스프링 : 개발 할 때 프레임을 제공하는 프로그램(프레임워크)
	>> 개발방법 : MVC2방법 
		>> M(model) : 특정한 방법에 의해서 처리되는 클래스, JDBC4단계에 의해 처리되는 클래스인 DAO
		>> V(view) : 클라이언트인 브라우저에 보여지는 역할의 파일, jsp파일만 담당!
				webapp(클라이언트가 직접 호출 가능한 jsp),
				WEB-INF/views(처리를 다 끝내고 결과를 담기위한 jsp, 컨트롤러를 거쳐서 호출)
		>> C(controller) : 서버에서 요청을 받아 어떻게 제어할지를 담당하는 클래스, frontController가 내장되어 있음. 
					세부적으로 처리하는 Controller를 구현
					@RequestMapping("요청주소") : 요청주소별 처리할 함수(메서드)를 맵핑하는 역할
					@Component : 싱글톤 만드는 역할
					@Controller : 컨트롤러로 등록하는 역할
					@Autowired : 싱글톤 만든 것 찾아서 아래 변수에 그 주소(위치)를 넣어주는 역할(의존성주입, DI, Dependency Injection)

10. JDBC 4단계
	1] 드라이버설정(커넥터 설정)
	2] DB연결(url, id, pw)
	3] SQL문 객체생성
	4] SQL문을 db로 전송

11. CRUD : create(insert) // read(select) // update(update) // delete(delete) >>DML

12. db table(row, record검색) -> java(DAO) VO(bag)
	>> row하나당 bag(vo)하나
	>> Object(java) Relational(rdb) Mapping(ORM) : 자바와 RDBMS(db)간의 데이터 맵핑

13. JSP에서 자바 표현식
	>> <% 자바 여러줄 %> 스크립트릿, <%= 변수%> (출력용)
	>> <jsp:useBean> 액션태그, jsp는 서블릿으로 변환되어 처리(jsp가 처음 호출되었을 때, 코드가 변경되었을 때 서블릿으로 변환)
14. 상태정보기술 
	>> 쿠키(브라우저측, 문자열만 저장)
	>> 세션(서버측, 모든 데이터 타입 저장 가능)
	>> 둘 다 역할은 같다